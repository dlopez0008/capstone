---
title: "Ridges, Troughs, and NYC Extremes: Unraveling Upper-Tropospheric Patterns Over Time"
author: "David Lopez"
date: "2025-04-27"
bibliography: references.bib
number-sections: false
format:
  html:
    theme: default
    rendering: embed-resources
    code-fold: true
    code-tools: true
    toc: true
jupyter: python3
---

![](noaa-0ETSZYPjvDo-unsplash.jpg)
NOAA. Unsplash. Published on July 3, 2019. from https://unsplash.com/photos/lighting-in-sky-during-nighttime-0ETSZYPjvDo

# Introduction

What drives extreme weather in New York City? While we often focus on surface level conditions, many of these events are influenced by patterns high in the atmosphere specifically at the 500 hPa level, where the air pressure is about half of what it is at sea level.

The 500 hPa level is a standard reference point in meteorology, typically found around 5.5 kilometers above the surface. In this context, hPa stands for hectopascals, a unit of pressure used to describe atmospheric layers. Air pressure decreases with altitude, and the 500 hPa level represents the point where the pressure is about half that at sea level. Rather than measuring altitude directly, meteorologists use geopotential height, which indicates the elevation at which a specific pressure level, like 500 hPa occurs. This value reflects both the atmospheric pressure and the temperature of the air column beneath it, warmer air causes expansion, higher geopotential height, while cooler air compresses the column ,lower height. Meteorologists analyze the 500 hPa layer to detect troughs and ridges, key features that influence storm tracks, jet streams, and regional weather. Troughs indicate areas of lower geopotential height, often linked to cooler, stormy weather. Ridges are marked by higher geopotential height, usually signal stable, warmer conditions and can intensify heatwaves.

This project uses daily data from the NOAA-CIRES 20th Century Reanalysis II to examine changes in the position and strength of these features over New York City from 1979 to 2021. The focus is on how these shifts correlate with extreme weather, such as heatwaves, heavy precipitation, and droughts. Understanding these dynamics supports climate resilience and better preparedness for future events.

# The Dataset

To investigate how upper-tropospheric patterns affect extreme weather in New York City, this project uses data from the NOAA-CIRES 20th Century Reanalysis II . The Reanalysis II dataset originates from the NCEP/NCAR Reanalysis I project, a collaborative effort between NOAA's National Centers for Environmental Prediction (NCEP) and the National Center for Atmospheric Research (NCAR). The Reanalysis II dataset provides a globally complete and physically consistent reconstruction of the atmosphere, extending from 1979 to the present.

The dataset is produced by assimilating historical surface pressure observations from ships, land stations, and buoys into a modern numerical weather prediction model using an advanced statistical approach known as the [Ensemble Kalman Filter](https://doi.org/10.1002/qj.776). The model then uses a physics based equations to infer the state of the atmosphere at various altitudes and times, including the 500 hPa level, providing estimates for geopotential height and other variables over time and space.

This project specifically focuses on daily 500 hPa geopotential height data from 1979 to 2021, concentrating on the grid point closest to New York City (40° N, 75° W). This time frame captures several decades of atmospheric behavior, making it possible to assess long term variability and emerging trends.

# Methodology

This project seeks to answer two primary research questions:
1. Has the variability of upper-tropospheric ridges and troughs changed over time?
2. Can changes in ridges and troughs be linked to extreme weather events in New York City?

Using Python tools like `xarray` and `pandas`, I gathered daily geopotential height values at the 500 hPa level from 1979 to 2021. We extracted data from the grid point closest to NYC’s coordinates (40° N, 75° W) to build a continuous time series of atmospheric heights at the 500 hPa pressure level.

To detect the presence of ridges and troughs, which are critical for understanding large scale weather patterns, I applied a peak detection algorithm using Python’s scipy.signal.find_peaks function. This method identifies local maxima (ridges) and minima (troughs) within a time series based on shape characteristics such as prominence and distance. By analyzing the oscillating pattern of geopotential height values, we detected local maximas and minimas at regular intervals. We used a minimum peak distance of 10 days to reduce noise and avoid false detections caused by short term fluctuations.
The find_peaks algorithm works by scanning the time series to find points that are higher than their neighboring values, optionally applying conditions like minimum prominence or separation distance. This allows it to isolate meaningful highs and lows in the atmospheric pressure field that correspond to dynamic ridging and troughing patterns in the upper troposphere (Virtanen et al., 2020).

In addition to detecting peaks, we integrated seasonal analysis to examine whether the frequency of ridge events varied across different parts of the year. Each date in the time series was categorized into one of four seasons: Winter (Dec–Feb), Spring (Mar–May), Summer (Jun–Aug), and Fall (Sep–Nov). Once the peaks were identified, we grouped them by both year and season, allowing us to track seasonal changes in peak frequency over time.

We then visualized the number of seasonal peaks for each year to highlight underlying trends. This allowed us to assess how often NYC experiences pronounced events in each season, and whether those patterns are changing over time, potentially influencing seasonal weather extremes like heat waves or storms.

To further isolate extreme atmospheric events, we computed the 95th percentile and 5th percentile thresholds of geopotential height values across the entire dataset. Days with geopotential heights above the 95th percentile were classified as extreme ridge events, often associated with strong upper level high pressure systems and potential heatwaves. Conversely, days below the 5th percentile were labeled as extreme trough events, commonly linked to deep low pressure systems, which can bring heavy rainfall or cold air outbreaks. This percentile based approach allowed us to focus on the most significant atmospheric anomalies, providing a robust framework for analyzing the relationship between upper tropospheric circulation and extreme surface weather.

# Analysis

```{python}
import xarray as xr
import numpy as np
import pandas as pd
from scipy.signal import find_peaks
import plotly.graph_objects as go

file_names = [
   "hgt.1979.nc", "hgt.1980.nc", "hgt.1981.nc", "hgt.1982.nc", "hgt.1983.nc",
   "hgt.1984.nc", "hgt.1985.nc", "hgt.1986.nc", "hgt.1987.nc", "hgt.1988.nc",
   "hgt.1989.nc", "hgt.1990.nc", "hgt.1991.nc", "hgt.1992.nc",
   "hgt.1993.nc", "hgt.1994.nc", "hgt.1995.nc", "hgt.1996.nc", "hgt.1997.nc",
   "hgt.1998.nc", "hgt.1999.nc", "hgt.2000.nc", "hgt.2001.nc", "hgt.2002.nc",
   "hgt.2003.nc", "hgt.2004.nc", "hgt.2005.nc", "hgt.2006.nc",
   "hgt.2007.nc", "hgt.2008.nc", "hgt.2009.nc", "hgt.2010.nc",
   "hgt.2011.nc", "hgt.2012.nc", "hgt.2013.nc",
   "hgt.2014.nc", "hgt.2015.nc", "hgt.2016.nc", "hgt.2017.nc",
   "hgt.2018.nc", "hgt.2019.nc", "hgt.2020.nc",
   "hgt.2021.nc"
]

nyc_lat = 40.7128
nyc_lon = 74.0060

frames = []
year_labels = []

# loops through the files
for file in file_names:
    year = int(file.split('.')[1])
    ds = xr.open_dataset(file)
    nyc_series = ds['hgt'].sel(lat=nyc_lat, lon=nyc_lon, level=500, method='nearest')
    hgt_values = nyc_series.values
    time = np.arange(len(hgt_values))

    peaks, _ = find_peaks(hgt_values, distance=10)
    troughs, _ = find_peaks(-hgt_values, distance=10)

    frame = go.Frame(
        data=[
            go.Scatter(x=time, y=hgt_values, mode='lines', name='Height'),
            go.Scatter(x=peaks, y=hgt_values[peaks], mode='markers',
                       marker=dict(color='red', size=6), name='Ridges'),
            go.Scatter(x=troughs, y=hgt_values[troughs], mode='markers',
                       marker=dict(color='blue', size=6), name='Troughs'),
        ],
        name=str(year)
    )

    frames.append(frame)
    ds.close()
first_frame = frames[0].data
# starting here a lot of this code was taken from reference 6 in References section
fig = go.Figure(
    data=first_frame,
    layout=go.Layout(
        title="Geopotential Height at 500 mb for NYC Over The Years",
        xaxis=dict(title="Time (Days)"),
        yaxis=dict(title="Geopotential Height (m)"),
        updatemenus=[dict(
            type="buttons",
            showactive=False,
            buttons=[
                dict(label="Play", method="animate", args=[None]),
                dict(label="Pause", method="animate", args=[[None], {"mode": "immediate", "frame": {"duration": 0, "redraw": False}, "transition": {"duration": 0}}]),
            ]
        )]
    ),
    frames=frames
)
fig.update_layout(
    sliders=[dict(
        steps=[dict(method="animate", args=[[f.name], {"mode": "immediate", "frame": {"duration": 500, "redraw": True}, "transition": {"duration": 0}}], label=f.name)
               for f in frames],
        transition={"duration": 0},
        x=0.1,
        xanchor="left",
        y=0,
        yanchor="top"
    )]
)

fig.show()
```



Before diving into long term trends or seasonal composites, it was important to first get a clear sense of how ridges and troughs appeared in the raw data itself. Using Python, I loaded each year's data file, spanning from 1979 to 2021, and isolated the grid point closest to NYC’s coordinates at the 500 hPa level. For every year, I extracted the time series of daily geopotential height values, providing a day by day view of how the geopotential height moved up and down over the city.

To identify key moments when the atmosphere formed ridges or troughs, I used a peak finding algorithm, Python’s scipy.signal.find_peaks function. Peaks in the geopotential height corresponded to ridges, while troughs indicated dips in geopotential height. 

By plotting each year individually and marking the detected peaks and troughs, it became possible to visually confirm the natural variability in NYC’s upper-troposphere conditions. These plots provided an essential first step, establishing a clear baseline of how ridges and troughs appeared in the daily data before moving into deeper, more structured analysis.

## Frequency of Ridges and Troughs Over Time

After confirming how ridges and troughs appeared in the daily data, the next step was to look at how often strong upper-tropospheric features, both ridges and troughs were forming each year, and whether that frequency had shifted over time.

To do this, I combined the daily geopotential height data for NYC from 1980 to 2021 into one continuous time series. Using the same peak detection method used previously, I identified all days when the 500 hPa geopotential height rose or dipped significantly relative to the mean, capturing both atmospheric ridges (highs) and troughs (lows).

Once the peaks were detected, I counted the total number each year. This provided the annual count of Ridges and Troughs for each year between 1980 and 2021.

From there, I fit a linear trend to the yearly counts to see if there was a clear long term pattern, whether the number of large scale features was increasing, decreasing, or holding steady over time. To smooth out short term ups and downs, I also calculated a five year rolling average.

Plotting all of this together, the yearly counts, the trend line, and the rolling average revealed important first insights into how the upper atmosphere’s variability over NYC has evolved across recent decades. 

```{python}
import xarray as xr
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import find_peaks
from sklearn.linear_model import LinearRegression

nyc_lat = 40.7128
nyc_lon = 74.0060

file_list = [f"hgt.{year}.nc" for year in range(1980, 2022)]
ts_list = []

for file in file_list:
    ds = xr.open_dataset(file)
    nyc_500hpa = ds['hgt'].sel(lat=nyc_lat, lon=nyc_lon, level=500.0, method='nearest')
    ts_list.append(nyc_500hpa)

hgt_500_nyc = xr.concat(ts_list, dim="time")
df = hgt_500_nyc.to_dataframe().reset_index().set_index("time")

y = df["hgt"].values 
time = df.index 
peaks, _ = find_peaks(y, height=np.mean(y))
peak_dates = time[peaks]
df_peaks = pd.DataFrame({"date": peak_dates})
df_peaks["year"] = df_peaks["date"].dt.year

peak_counts = df_peaks.groupby("year").size().reset_index(name="peak_count")

X = peak_counts["year"].values.reshape(-1, 1) 
y = peak_counts["peak_count"].values

model = LinearRegression()
model.fit(X, y)
trend_line = model.predict(X)

peak_counts["rolling_avg"] = peak_counts["peak_count"].rolling(window=5, center=True).mean()

plt.figure(figsize=(10, 5))
plt.plot(peak_counts["year"], peak_counts["peak_count"], marker="o", linestyle="-", color="r", label="Annual Peak Count")
plt.plot(peak_counts["year"], trend_line, linestyle="--", color="b", label="Linear Trend")
plt.plot(peak_counts["year"], peak_counts["rolling_avg"], linestyle="-", color="g", label="5-Year Rolling Average")
plt.xlabel("Year")
plt.ylabel("Number of Peaks")
plt.title("Trend in Annual Count of Geopotential Height Peaks (500 hPa, NYC)")
plt.legend()
plt.grid()
plt.yticks(np.arange(30, 65, 5))
plt.ylim(30, 60)                 
plt.show()

```

The figure above shows how the total number of both ridges and troughs at 500 hPa over New York City varied each year from 1980 through 2021. Overall, the plot reveals considerable year to year variability in the number of peaks, with annual totals generally fluctuating between about 35 and 50 peaks per year. Some years exhibit sharper increases or decreases compared to surrounding years, highlighting the natural atmospheric variability that can occur on annual timescales. This variability may reflect influences from broader climate patterns such as the El Niño–Southern Oscillation (ENSO) or the North Atlantic Oscillation (NAO), but also a large degree of random, chaotic behavior in weather patterns.

Despite the strong fluctuations from year to year, the linear trend line fitted through the data, shown as a dashed blue line, does reveal a slight positive slope, indicating a minimal upward trend in peak frequency. Although the increase appears small, it is important to recognize that even subtle changes in the behavior of upper-tropospheric circulation can have significant impacts. A slight rise in the number of disturbances could potentially lead to more frequent weather disruptions at the surface, such as shifts in storm tracks, changes in precipitation patterns, or more episodes of extreme weather affecting the NYC region.

A closer inspection of the five year rolling average reveals an important feature beginning around 2018. For much of the record, the rolling average remained fairly constrained between approximately 40 and 45 peaks per year. However, around 2018, the five year rolling average crosses above 45 for the first time in the dataset. This shift suggests that during the late 2010s, there was a notable clustering of years with higher than average peak counts. Although this upward movement is subtle, it breaks from the previous multi decade pattern of bounded variability. The fact that the rolling mean exceeds its historical range hints at a potential emerging signal of increased dynamical activity at 500 hPa, which could have downstream impacts on surface weather patterns. Even minor increases in the frequency of ridges and troughs can modulate storminess, precipitation extremes, and temperature variability in the NYC region, meaning that this change, while modest in absolute terms, warrants attention.

## Seasonal Analysis of Ridges and Troughs

To better understand how upper-tropospheric dynamics may vary not just year to year, but within different times of the year, we separated the data by season. Examining trends by season can provide insight into whether particular parts of the year,are becoming more dynamically active. By grouping the detected peaks into seasonal categories and analyzing how the frequency of ridges and troughs have changed over time, we can identify more nuanced patterns that annual summaries might obscure.

```{python}
import xarray as xr
import matplotlib.pyplot as plt
import numpy as np
from scipy.signal import find_peaks


nyc_lat = 40.7128
nyc_lon = 74.0060
file_list = [f"hgt.{year}.nc" for year in range(1980, 2022)]
ts_list = []
for file in file_list:
   ds = xr.open_dataset(file)
   nyc_500hpa = ds['hgt'].sel(lat=nyc_lat, lon=nyc_lon, level=500.0, method='nearest')
   ts_list.append(nyc_500hpa)
hgt_500_nyc = xr.concat(ts_list, dim="time")
df = hgt_500_nyc.to_dataframe().reset_index()
df["year"] = df["time"].dt.year
df["month"] = df["time"].dt.month
# had to do this manually 1,2,3..,12 because of how winter is 1 but 12 is also winter
season_map = {12: "Winter", 1: "Winter", 2: "Winter",
             3: "Spring", 4: "Spring", 5: "Spring",
             6: "Summer", 7: "Summer", 8: "Summer",
             9: "Fall", 10: "Fall", 11: "Fall"}
df["season"] = df["month"].map(season_map)


y = df["hgt"].values 
peaks, _ = find_peaks(y, prominence=10)


df_peaks = df.iloc[peaks].copy()
df_peaks["peak_intensity"] = df_peaks["hgt"]
df_peaks = df_peaks[["time", "hgt", "peak_intensity", "year", "season"]]
peak_counts_seasonal = df_peaks.groupby(["year", "season"]).size().unstack()


plt.figure(figsize=(12, 6))
peak_counts_seasonal.rolling(window=5, min_periods=1).mean().plot(marker="o", linestyle="-", ax=plt.gca())
plt.title("Seasonal Peak Frequency Trends (500 hPa Geopotential Height)")
plt.xlabel("Year")
plt.ylabel("Number of Peaks")
plt.legend(title="Season")
plt.grid()
plt.yticks(np.arange(10, 21, 2))
plt.ylim(10, 21)    
plt.show()
```

The figure displays the annual number of seasonal peaks in 500 hPa geopotential height over New York City from 1980 to 2021. Each line represents one season: Winter (red), Spring (orange), Summer (green), and Fall (blue).
Winter consistently has the highest number of peaks each year, highlighting the season’s strong dynamical activity typically associated with more active weather patterns like storms. Fall follows closely behind, while Spring and Summer generally record fewer peaks, consistent with the relatively quieter atmospheric conditions expected in warmer months.

Notably, Spring shows a sharp decline in peak counts during the early 1980s, stabilizing at lower values thereafter. Winter displays some variability across the record, with slight increases in peak counts in the early 2000s and mid 2010s. Summer remains relatively steady over time, although there are small oscillations year to year. Fall shows more variability but tends to hover around a similar range throughout the period.

Overall, while there is year to year variability, the seasonal patterns remain remarkably stable. However, subtle increases or decreases within seasons,especially Winter’s slight upward swings in more recent years,may signal emerging shifts in the behavior of upper-tropospheric dynamics over the region. While seasonal patterns of peak frequency have remained relatively consistent since 1980, small but noticeable fluctuations,particularly during Winter, highlight the importance of monitoring subtle changes in upper-tropospheric dynamics, as even modest shifts can influence local and regional weather variability over time.

To further investigate the characteristics of these upper-tropospheric peaks, we analyzed not only their frequency but also their intensity. By calculating the mean geopotential height of all the data per year, we can assess whether the strength of these geopotential heights have changed over time, regardless of how often they occur. A visualization of these yearly mean peak intensities reveals whether certain decades experienced stronger average anomalies, which may point to broader climatic shifts or changes in the amplitude of mid-latitude wave patterns that influence regional weather extremes.

## Yearly Mean Geopotential Height 

```{python}

peak_intensity_trends = df_peaks.groupby("year")["peak_intensity"].mean()
peak_intensity_smoothed = peak_intensity_trends.rolling(window=5, min_periods=1).mean()

X = np.array(peak_intensity_trends.index).reshape(-1, 1)
y = np.array(peak_intensity_trends.values).reshape(-1, 1)

model = LinearRegression().fit(X, y)
trend_line = model.predict(X)

plt.figure(figsize=(12, 6))
plt.plot(peak_intensity_trends.index, peak_intensity_trends, marker="o", linestyle="-", label="Observed")
plt.plot(peak_intensity_trends.index, peak_intensity_smoothed, linestyle="--", label="5-Year Rolling Average")
plt.plot(peak_intensity_trends.index, trend_line, linestyle="-.", label="Linear Trend", color="red")
plt.title("Peak Intensity Trends (500 hPa Geopotential Height)")
plt.xlabel("Year")
plt.ylabel("Mean Geopotential Height(m)")
plt.legend()
plt.grid()
plt.show()
```

The figure above shows the annual mean intensity of geopotential height ridges at 500 hPa over NYC from 1980 to 2021. The blue line with markers represents observed yearly values, the orange dashed line is the 5-year rolling average, and the red dash-dot line shows a linear trend.


Despite year-to-year variability, the linear trend is slightly increasing, suggesting that the mean geopotential height over NYC has increased over time, which may be linked to more frequent or intense weather extremes like heatwaves.

## Identifying and Visualizing Extremes (top and bottom 5%) in 500 hPa Geopotential Height

By isolating the top and bottom 5% of weekly averaged 500 hPa geopotential height values, we can focus on the strongest ridging (extreme highs) and deepest troughing (extreme lows) over NYC. This approach allows us to better capture and visualize the rare, high impact atmospheric configurations that may drive significant local weather events, such as heatwaves, cold snaps, and major storms. 

Below, we apply this method to identify and plot these extreme events.

```{python}
import xarray as xr
import numpy as np
import matplotlib.pyplot as plt




nyc_lat = 40.7128
nyc_lon = 74.0060


file_list = [f"hgt.{year}.nc" for year in range(1980, 2022)]
ts_list = []
for file in file_list:
   ds = xr.open_dataset(file)
   nyc_500hpa = ds['hgt'].sel(lat=nyc_lat, lon=nyc_lon, level=500.0, method='nearest')
   ts_list.append(nyc_500hpa)




hgt_500_nyc = xr.concat(ts_list, dim="time")
df = hgt_500_nyc.to_dataframe().reset_index().set_index("time")
df = df.resample("W").mean()
upper_threshold = np.percentile(df["hgt"], 95) 
lower_threshold = np.percentile(df["hgt"], 5)
extreme_highs = df[df["hgt"] >= upper_threshold]
extreme_lows = df[df["hgt"] <= lower_threshold]


plt.plot(df.index, df["hgt"], label="500 hPa Geopotential Height", color='blue', alpha=0.6)
plt.scatter(extreme_highs.index, extreme_highs["hgt"], color='red', label="Extreme Ridges (Top 5%)", alpha=0.8)
plt.scatter(extreme_lows.index, extreme_lows["hgt"], color='black', label="Extreme Troughs (Bottom 5%)", alpha=0.8)
plt.axhline(upper_threshold, color='red', linestyle='dashed', alpha=0.7, label="95th Percentile")
plt.axhline(lower_threshold, color='black', linestyle='dashed', alpha=0.7, label="5th Percentile")
plt.xlabel("Year")
plt.ylabel("Geopotential Height (m)")
plt.title("Extreme Events in 500 hPa Geopotential Height Over NYC")
plt.legend(
    title="Legend",
    fontsize=6,
    title_fontsize=8,
    loc='center left',
    bbox_to_anchor=(1.02, 0.5),
    borderaxespad=0,
    frameon=True
)

plt.grid(True)
plt.tight_layout()  
plt.show()
```

The figure above shows the weekly averaged 500 hPa geopotential height over New York City from 1980 to 2021, highlighting the most extreme atmospheric events. The blue curve traces the natural week to week variability of the geopotential height field, giving us a sense of the background fluctuations in the upper-troposphere. Overlaid on this curve are two sets of highlighted points, the red dots represent the top 5% of weekly geopotential height values, corresponding to extreme ridging events, while the black dots capture the bottom 5% of values, signaling extreme troughing events. To better visualize where these extremes sit relative to the full distribution, we also include dashed lines marking the 95th percentile (in red) and the 5th percentile (in black).

This visualization allows us to isolate and study the most significant departures from typical conditions. Identifying these extreme cases within the broader dataset provides a clearer lens for analyzing how the frequency and characteristics of extreme atmospheric conditions may have shifted over time, setting up the next steps in our analysis.

# Modeling Seasonal Cycles and Long Term Changes with Harmonic Regression

To better understand the underlying structure of the 500 hPa geopotential height variability over New York City, we turn to harmonic regression. I chose this approach because the atmosphere naturally exhibits strong periodic behavior, particularly tied to the seasons. The rise and fall of geopotential heights throughout the year are not random, they follow a predictable, wave like pattern that harmonic regression is specifically designed to capture. By fitting sine and cosine functions to our data, we can model the repeating annual cycle with precision while also detecting any shifts or trends that depart from this expected rhythm.

Harmonic regression is particularly well suited for our research goals because it allows us to separate the regular, seasonally driven variability from the less predictable anomalies. We can quantify the typical yearly cycle of the atmosphere while also tracking how the timing, amplitude, or baseline of that cycle might be changing over time. This separation is crucial for identifying subtle but important signals, such as the amplification or weakening of seasonal peaks, or the gradual rise or fall in mean geopotential heights that could hint at broader climatic shifts.

To build our model, we incorporated several key components. First, we included a constant and a linear trend term to account for any long term changes in the data, such as a steady increase or decrease in average geopotential height over the decades. Next, to capture the strong seasonal cycle, we used a set of Fourier terms, representing annual periodicity with multiple harmonics to allow flexibility in the shape of the seasonal pattern. Finally, we fit a Seasonal ARIMA model to the residuals, helping account for any remaining autocorrelation and further improving the accuracy of our forecasts. Together, this Dynamic Harmonic Regression framework provides a powerful way to model both the predictable seasonal patterns and the less predictable long term variations in the 500 hPa geopotential height field over NYC.

Once the Dynamic Harmonic Regression (DHR) model is fitted, we can visualize both the historical observations and the forecasted behavior of the 500 hPa geopotential height over New York City. In the resulting plot, the solid blue line represents the observed weekly averaged geopotential heights from 1979 to 2021. This line captures the familiar seasonal rhythm, rising and falling with the natural progression of the seasons, but also reveals subtle year to year variations.
Overlaid on the observations is a red dashed line, which shows the forecast produced by our harmonic regression model. Extending five years beyond the end of our dataset, this forecast projects the expected seasonal behavior of geopotential heights based on the patterns learned from the historical record. The model’s strength lies in its ability to maintain the seasonal structure, the characteristic peaks and valleys, while allowing for gradual shifts in the baseline level or in the amplitude of the cycles.

By comparing the forecast to the historical data, we can assess not only the persistence of the seasonal cycle but also whether any underlying trends are projected to continue into the near future. For example, if the baseline of the forecast continues to rise, it would suggest that geopotential heights at 500 hPa over NYC are trending higher, a signal that could be associated with broader changes in atmospheric circulation patterns or warming related impacts. Alternatively, shifts in the amplitude or timing of the seasonal peaks could point to changing dynamics in the way the atmosphere transitions between seasons.

This visualization serves as both a check on our model’s performance, how well it reproduces past behavior, and as a tool for gaining insight into the future behavior of extreme events, seasonal cycles, and long term trends in the upper-troposphere over New York City.

![](HarmonicRegression.png)

Looking at the results of our Dynamic Harmonic Regression (DHR) model, we can see how effectively it captures the essential structure of the 500 hPa geopotential height variability over New York City. The observed data, shown in blue, oscillates in a strong, rhythmic seasonal cycle that persists over the full 1979–2021 period. Our DHR model picks up on this repeating pattern and extends it seamlessly into the forecast period, shown in red.

The forecast maintains the familiar annual rise and fall in geopotential height, demonstrating that the seasonal signal is expected to persist into the coming years. However, one striking feature of the forecast is that it appears slightly more compressed. This could hint at a subtle weakening of the seasonal extremes, although further analysis would be needed to confirm whether this is a true physical signal or an artifact of the model smoothing the forecast.

Importantly, the middle level around which the seasonal cycles oscillate, remains stable without a dramatic upward or downward trend. This suggests that, at least based on the historical patterns captured by our model, we do not expect a large shift in the average 500 hPa geopotential height over NYC in the immediate future.

That said, even small changes in the amplitude or phase of the seasonal cycle can have important implications. Since the 500 hPa height is closely tied to the strength and position of ridges and troughs in the atmosphere, any change in its behavior could influence the frequency, intensity, or timing of extreme weather events, such as heat waves or heavy rainfall. 

In short, the DHR model provides a powerful lens through which to understand not just what has happened, but what may lie ahead in the behavior of the upper-troposphere. 

# Future Work

One key avenue for future research is to expand the geographic scope of this study beyond New York City. By applying the same peak detection and harmonic regression techniques to other major metropolitan areas, we can investigate whether similar patterns of upper-tropospheric variability and corresponding extremes are emerging elsewhere.

Another important step will be a comparative analysis of extreme geopotential height anomalies across different climate zones. This will help reveal regional differences in ridge and trough behavior, and may identify areas where high altitude circulation changes are more pronounced.

A deeper dive into the dynamics of ridge and trough migration is also planned. Tracking how the mean latitude and longitude of these features shift over time will shed light on whether the atmospheric “highways” themselves are drifting, potentially altering the pathways of storms and heatwaves.

Finally, integrating additional atmospheric variables such as humidity, temperature advection, and jet stream intensity will allow us to build a more complete picture of the drivers behind extreme events. Coupling these insights with surface impacts such as precipitation extremes, and heatwave duration will strengthen our understanding of how upper-tropospheric changes translate into on the ground weather hazards.

# References

1. NOAA Physical Sciences Laboratory. *NCEP/NCAR Reanalysis 1 Data*. NOAA PSL. Retrieved April 2025, from https://psl.noaa.gov/data/gridded/data.ncep.html
2. Virtanen, P., Gommers, R., Oliphant, T. E., Haberland, M., Reddy, T., Cournapeau, D., Burovski, E., Peterson, P., Weckesser, W., Bright, J., van der Walt, S. J., Brett, M., Wilson, J., Millman, K. J., Mayorov, N., Nelson, A. R. J., Jones, E., Kern, R., Larson, E., Carey, C. J., Polat, İ., Feng, Y., Moore, E. W., VanderPlas, J., Laxalde, D., Perktold, J., Cimrman, R., Henriksen, I., Quintero, E. A., Harris, C. R., Archibald, A. M., Ribeiro, A. H., Pedregosa, F., & van Mulbregt, P. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python. Nature Methods, 17(3), 261–272. Retrieved April 2025, from https://doi.org/10.1038/s41592-019-0686-2
3. Seabold, S., & Perktold, J. (2010). Statsmodels: Econometric and Statistical Modeling with Python. Proceedings of the 9th Python in Science Conference, Austin, TX, 92–96. https://doi.org/10.25080/Majora-92bf1922-011
4. YouTube. December 15, 2023. Dynamic Harmonic Regression For Time Series Forecasting. YouTube. https://www.youtube.com/watch?v=Zgcry0SPUY8
5. Compo, G. P., Whitaker, J. S., Sardeshmukh, P. D., Matsui, N., Allan, R. J., Yin, X., Gleason, B. E., Vose, R. S., Rutledge, G., Bessemoulin, P., Brönnimann, S., Brunet, M., Crouthamel, R. I., Grant, A. N., Groisman, P. Y., Jones, P. D., Kruk, M. C., Kruger, A. C., Marshall, G. J., Worley, S. J. (2011). The Twentieth Century Reanalysis Project. Quarterly Journal of the Royal Meteorological Society, 137(654), 1–28. https://doi.org/10.1002/qj.776
6. Plotly Technologies Inc. (n.d.). Intro to animations in Python. Plotly. Retrieved April 2025, from https://plotly.com/python/animations/
7. Meduri, P.Take Your Forecasting to the Next Level with Harmonic Regression. Medium. Retrieved March 2025, from https://medium.com/data-science/take-your-forecasting-to-the-next-level-with-harmonic-regression-5a8515f63295